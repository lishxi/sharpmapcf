#summary Project /SharpMap

= Introduction =

These are the steps followed trying to port !SharpMap v2.0 to the .NET Compact Framewok. 

= =  
The original source code has not been removed, but commented using a preprocessing directive (CFBuild).  
For example, there's no System.Runtime.Serialization in CF so we do
{{{
 #if !CFBuild
   using System.Runtime.Serialization;
 #endif
}}}
= Procedure =
 * External references
 * Removing unsupported features
 * Deleted Methods 
 * Deleted fields
 * Other things


== External references == 
 

== Removing unsupported features ==
Deleted [Serializable] Attribute on:
 * !SharpMap/Rendering/Rendering2D/Size2D.cs
 * !SharpMap/Styles/Style.cs
 * !SharpMap/Styles/StyleColor.cs
 * !SharpMap/Styles/StyleBrush.cs
 * !SharpMap/Styles/StyleFont.cs
 * !SharpMap/Styles/StyleFontFamily.cs
 * !SharpMap/Styles/StyleFontPen.cs
 * !SharpMap/Presentation/ViewPointHoverEventArgs.cs
 * !SharpMap/Rendering/Rendering3D.ViewRectangle3D.cs
 * !SharpMap/Utilities/Tolerance.cs
 * !SharpMap\Presentation\LayerActionEventArgs.cs
 * !SharpMap\Indexing\BinaryTree\BinaryTreeNode.cs
 * !SharpMap\Data\LayerDataLoadException.cs
 * !SharpMap\Geometries\BoundingBox.cs
 * !SharpMap\Layers\Layer.cs
 * !SharpMap\Geometries\MultiPolygon.cs
 * !SharpMap\Converters\ParseException.cs
 * !SharpMap\Geometries\MultiLineString.cs
 * !SharpMap\Features\FeatureDataRow.cs
 * !SharpMap\Indexing\BinaryTree\BinaryTree.cs
 * !SharpMap\Rendering\Rendering2D\Point2D.cs
 * !SharpMap\Layers\DuplicateLayerException.cs
 * !SharpMap\Rendering\Rendering2D\Matrix2D.cs
 * !SharpMap\Features\FeatureDataTable.cs
 * !SharpMap\Presentation\MapViewPropertyChangeEventArgs.cs
 * !SharpMap\Data\SharpMapDataException.cs
 * !SharpMap\Presentation\MapZoomChangedEventArgs.cs
 * !SharpMap\Geometries\Polygon.cs
 * !SharpMap\Geometries\Polygon.cs
 * !SharpMap\Rendering\Rendering2D\Rectangle2D.cs
 * !SharpMap\Geometries\Point.cs
 * !SharpMap\CoordinateSystems\Projections\ProjectionComputationException.cs
 * !SharpMap\Features\FeatureDataSet.cs
 * !SharpMap\Geometries\Geometries3D\Point3D.cs
 * !SharpMap\Geometries\Geometry.cs
 * !SharpMap\Geometries\LineString.cs
 * !SharpMap\Layers\LayersChangedEventArgs.cs
 * !SharpMap\Features\FeatureTableCollection.cs
 
*Deleted "Using System.Runtime.Serialization" in*

 * !SharpMap\Features\FeatureDataSet.cs
 * !SharpMap\CoordinateSystems\Projections\ProjectionComputationException.cs
 * !SharpMap\Rendering\Rendering2D\Symbol2D.cs
 * !SharpMap\Data\Providers\Shapefile\DbfSchemaMismatchException.cs
 * !SharpMap\Data\Providers\Shapefile\ShapeFileIsInvalidException.cs
 * !SharpMap\Data\LayerDataLoadException.cs
 * !SharpMap\Data\Providers\Shapefile\ShapeFileInvalidOperationException.cs
 * !SharpMap\Indexing\ObsoleteIndexFileFormatException.cs
 * !SharpMap\Converters\ParseException.cs
 * !SharpMap\Data\Providers\Shapefile\InvalidDbaseFileException.cs
 * !SharpMap\Layers\DuplicateLayerException.cs
 * !SharpMap\Data\Providers\Shapefile\ShapeFileException.cs
 * !SharpMap\Data\Providers\Shapefile\InvalidDbaseFileOperationException.cs
 * !SharpMap\Data\SharpMapDataException.cs
 * !SharpMap\Data\Providers\Shapefile\ShapeFileUnsupportedGeometryException.cs
 * !SharpMap\Indexing\RTree\DynamicRTree.cs

Deleted "Using System.Rflection.Emit" in:

 * !SharpMap\Features\FeatureDataView.cs
 * !SharpMap\Features\FeatureDataSet.cs
 * !SharpMap\Features\FeatureDataRow.cs
 * !SharpMap\Features\FeatureMerger.cs
 * !SharpMap\Features\FeatureDataTable.cs


Deleted "using System.Runtime.Serialization.Formatters.Binary;" in 
 * !SharpMap\Indexing\RTree\DynamicRTree.cs

Deleted "[global::System.Serializable]" in
 * !SharpMap\Indexing\QuadTree\LinearQuadTreeEntryInsertStrategy.cs


Deleted interface "ISerializable" in 
 * !SharpMap\Rendering\Rendering2D\Symbol2D.cs
 * !SharpMap\Indexing\RTree\DynamicRTree.cs


== Deleted Methods ==

*In SharpMap\Data\LayerDataLoadException.cs*
Deleted
	public LayerDataLoadException(SerializationInfo info, StreamingContext context)
	public override void GetObjectData(SerializationInfo info, StreamingContext context)


*In SharpMap\Features\FeatureDataSet.cs*
 
        protected FeatureDataSet(SerializationInfo info, StreamingContext context)


*In SharpMap\Rendering\Rendering2D\Symbol2D.cs*

        private Symbol2D(SerializationInfo info, StreamingContext context)
        public void GetObjectData(SerializationInfo info, StreamingContext context)


*In SharpMap\Indexing\RTree\DynamicRTree.cs*
	protected DynamicRTree(SerializationInfo info, StreamingContext context)
  public void GetObjectData(SerializationInfo info, StreamingContext context)

*In SharpMap\Data\Providers\Shapefile\ShapeFileUnsupportedGeometryException.cs*
  public ShapeFileUnsupportedGeometryException(SerializationInfo info, StreamingContext context)


*In SharpMap\CoordinateSystems\Projections\ProjectionComputationException.cs*

	public ProjectionComputationException(SerializationInfo info, StreamingContext context)


*In SharpMap\Data\Providers\Shapefile\InvalidDbaseFileOperationException.cs*
        public InvalidDbaseFileOperationException(SerializationInfo info, StreamingContext context)


*SharpMap\Data\SharpMapDataException.cs*
  public SharpMapDataException(SerializationInfo info, StreamingContext context)


*In SharpMap\Data\Providers\Shapefile\ShapeFileException.cs*
  public ShapeFileException(SerializationInfo info, StreamingContext context)


*In SharpMap\Indexing\QuadTree\LinearQuadTreeEntryInsertStrategy.cs*

  protected QuadTreeIndexInsertOverflowException(

*In SharpMap\Layers\DuplicateLayerException.cs*
	protected DuplicateLayerException(SerializationInfo info, StreamingContext context)

*In SharpMap\Layers\DuplicateLayerException.cs*
	public override void GetObjectData(SerializationInfo info, StreamingContext context)


*In SharpMap\Data\Providers\Shapefile\InvalidDbaseFileException.cs*
	public InvalidDbaseFileException(SerializationInfo info, StreamingContext context)

*In SharpMap\Data\Providers\Shapefile\InvalidDbaseFileException.cs*
	public override void GetObjectData(SerializationInfo info, StreamingContext context)

*In SharpMap\Converters\ParseException.cs*
	protected ParseException(SerializationInfo info, StreamingContext context)

*In SharpMap\Indexing\ObsoleteIndexFileFormatException.cs*
        public ObsoleteIndexFileFormatException(SerializationInfo info, StreamingContext context)


*In SharpMap\Data\Providers\Shapefile\ShapeFileInvalidOperationException.cs*
	public ShapeFileInvalidOperationException(SerializationInfo info, StreamingContext context)

In public ShapeFileIsInvalidException(SerializationInfo info, StreamingContext context)
	public ShapeFileIsInvalidException(SerializationInfo info, StreamingContext context)


*In SharpMap\Data\Providers\Shapefile\DbfSchemaMismatchException.cs*
	public DbfSchemaMismatchException(SerializationInfo info, StreamingContext context)




== Deleted fields ==

*In SharpMap\Indexing\RTree\SelfOptimizingSpatialIndex.cs*
	private readonly EventWaitHandle _userIdleEvent;
	private readonly EventWaitHandle _machineIdleEvent;
	private readonly EventWaitHandle _terminateEvent;
Reason: No System.Threading.EventWaitHandle


*In SharpMap\Indexing\RTree\DynamicRTree.cs*
	private static readonly BinaryFormatter _keyFormatter = new BinaryFormatter();
Reason: No System.Runtime.Serialization.Formatters.Binary.BinaryFormatter

*In SharpMap\Utilities\IdleMonitor.cs*
	  private EventWaitHandle _terminateEvent;
Reason: //No System.Threading.EventWaitHandle


*In SharpMap\Features\FeatureDataTable.cs*
      [Browsable(false)]
 

== Other Things ==

*In SharpMap\Layers\FeatureLayer.cs:*

*Problem:*
	There's no System.ComponentModel.BackgroundWorker() on the CF. This thread is used
when property VisibleRegion changes. It triggers the request of the data (that covers the new region) asynchronously (if AsyncQuery is true)


*In SharpMap\Layers\FeatureLayer.cs:*

Problem:
	There's no System.ComponentModel.BackgroundWorker() on the CF. This thread is used
when property VisibleRegion changes for requesting the data (that covers the new region) asynchronously (if AsyncQuery is true)

Workaround:
        new /Util/BackgroundWorker.cs that extends System.ComponentModel.Component 

	
 FeatureLayer.cs does not change, but /Util/BackgroundWorker.cs is totally commented out if the build is not for CF




*In SharpMap\CoordinateSystems\Info.cs*
 Problem:
	`sb.AppendFormat("<CS_Info");` 
	No overload for method 'AppendFormat' (StringBuilder) takes '1' arguments. In CF only overload is
     StringBuilder.AppendFormat(System.IFormatProvider provider, string format, params object[] args) 
 Workaround:

	`sb.AppendFormat("<CS_Info");`

 Problem:
	`sb.AppendFormat(null," AuthorityCode=\"{0}\"", AuthorityCode);`
         The same as above.

 Workaround:
	If the provider parameter is a null reference, format provider information is obtained from the current culture. So
we can use instead:
	`sb.AppendFormat(null," AuthorityCode=\"{0}\"", AuthorityCode);`


*In SharpMap\CoordinateSystems\AngularUnit.cs*

 Problem:
 The same as in Info.cs

 `sb.AppendFormat(", AUTHORITY[\"{0}\", \"{1}\"]", Authority, AuthorityCode);`

 Workaround:

 `sb.AppendFormat(", AUTHORITY[\"{0}\", \"{1}\"]", Authority, AuthorityCode);`

 
 
 

*In SharpMap\Data\Providers\Shapefile\DbaseReader.cs*

 Problem:
{{{
 if (DateTime.TryParseExact(Encoding.UTF8.GetString((_dbaseReader.ReadBytes(8))),
     "yyyyMMdd", DbaseConstants.StorageNumberFormat, DateTimeStyles.None, out date))
 {
     return date;
 }
 else
 {
     return DBNull.Value;
 }
}}}
 In CF Encoding.UTF8.GetString takes 3 arguments so we use instead
{{{
 try
 {
    brBytes = _dbaseReader.ReadBytes(8);
    return date = DateTime.ParseExact(Encoding.UTF7.GetString(brBytes,0,brBytes.Length),
                 "yyyyMMdd", DbaseConstants.StorageNumberFormat, DateTimeStyles.None);
 }
 catch (Exception e)
 {
        return DBNull.Value;
 }
}}}

 
*In SharpMap\CoordinateSystems\Projection.cs*
 Problem: 

	`sb.AppendFormat("PROJECTION[\"{0}\"", Name);`

 Workaround:

	 Use `sb.AppendFormat(null, "PROJECTION[\"{0}\"", Name);`

 
*In SharpMap\CoordinateSystems\HorizontalDatum.cs*
 Problem (3 of this kind): 

	`sb.AppendFormat(", {0}", _wgs84ConversionInfo.WKT);`

 Workaround:

	`sb.AppendFormat(null,", {0}", _wgs84ConversionInfo.WKT);`

 
*In SharpMap\CoordinateSystems\GeographicCoordinateSystem.cs*
 Problem (4 of this kind): 

   `sb.AppendFormat(", AUTHORITY[\"{0}\", \"{1}\"]", Authority, AuthorityCode);`

 Workaround:

   `sb.AppendFormat(null, ", AUTHORITY[\"{0}\", \"{1}\"]", Authority, AuthorityCode);`
 
 
*In SharpMap\CoordinateSystems\ProjectedCoordinateSystem.cs*
 Problem (5 of this kind): 

	`sb.AppendFormat(", {0}", LinearUnit.Wkt);`

 Workaround:

	`sb.AppendFormat(null, ", {0}", LinearUnit.Wkt);`
 
 
 
 
*In SharpMap\CoordinateSystems\GeocentricCoordinateSystem.cs*
 Problem (4 of this kind): 

	`sb.AppendFormat(string, args);`

 Workaround:

	`sb.AppendFormat(null, string, args);`




*In SharpMap\CoordinateSystems\Unit.cs*
 Problem (1 of this kind): 

	`sb.AppendFormat(string, args);`

 Workaround:

	`sb.AppendFormat(null, string, args);`


*In SharpMap\CoordinateSystems\Projections\MapProjection.cs*
 Problem (5 of this kind): 

	`sb.AppendFormat(string, args);`

 Workaround:

	`sb.AppendFormat(null, string, args);`


 Problem (2 of this kind): 
 
 `throw new ArgumentOutOfRangeException("x",y," not a valid latitude in degrees.");`
 
 Workaround:
 
 `throw new ArgumentOutOfRangeException("x"," x:"+y + " not a valid latitude in degrees.");`


*In SharpMap\Presentation\Presenters\MapPresenter2D.cs*
 Problem (2 of this kind): 
 
 `throw new ArgumentOutOfRangeException("value", value, "Invalid pixel aspect ratio.");`
 
 Workaround:
 
 `throw new ArgumentOutOfRangeException("value","value("+value+") Invalid pixel aspect ratio.");`

*In SharpMap\Rendering\Rendering2D\Size2D.cs*
 Problem (3 of this kind): 

 `throw new ArgumentOutOfRangeException("row", row, "A Point2D has only 1 row.");`
 
 Workaround:
 
`throw new ArgumentOutOfRangeException("row", "row("+row+") A Point2D has only 1 row.");`


*In SharpMap\Indexing\BinaryTree\BinaryTree.cs*
 Problem: 
  
 `Array.ForEach(items, Add);` 
   //Error:System.Array' does not contain a definition for 'ForEach'

 Workaround:
{{{
	foreach (ItemValue item in items)
                Add(item);
}}}


 Problem:
 `Trace.WriteLine(root.Item.ToString());`
 //Error 136 'System.Diagnostics.Trace' does not contain a definition for 'WriteLine'

 Workaround:

	Commented out  
 

*In C:\Desarrollo\VisualStudio\proyects\SharpMapCFv2.0\SharpMap\Styles\StylePen.cs*
 Problem:

   `buffer.AppendFormat("N3", value);`
   //Error The best overloaded method match for 'System.Text.StringBuilder.AppendFormat(System.IFormatProvider, string, params object[])' has some invalid arguments

 Workaround:

    `buffer.AppendFormat(null, "N3", value);`


*In SharpMap\Rendering\Rendering2D\Symbol2D.cs (medium) *
 Problem:

	`_symbolData.Dispose();` (Stream _symbolData)

         In CF Stream, Dispose() is protected

 Workaround:

	let's close it

	`_symbolData.Close();`



*In SharpMap\Data\Providers\Shapefile\DbaseEncodingRegistry.cs*
 Problem:

	`return Encoding.GetEncoding(CultureInfo.TextInfo.MacCodePage);

         In CF Stream, TextInfo only has ANSICodePage

 Workaround:

	let's make TextInfo.ANSICodePage default















== NOT Resolved ==

TO BE RESOLVED


*In SharpMap\Presentation\Presenters\MapPresenter2D.cs*
 Issue [http://code.google.com/p/sharpmapcf/issues/detail?id=1]
 
 Problem:
  private void handleLayersChanged(object sender, ListChangedEventArgs e){..}
 is called when a layer (in a list) is called. But ListChangedEventArgs has no PropertyDescriptor, so how can be know which layer changed?
{{{
    case ListChangedType.ItemChanged:
        if(e.PropertyDescriptor.Name == Layer.EnabledProperty.Name)
        {
            renderAllLayers();   
        }
        break;
}}}


 Workaround: 

   Let's always render all layers by now.
 
 
 
 
 